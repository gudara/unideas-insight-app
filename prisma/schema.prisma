// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") //"postgresql://postgres:123@localhost:5432/test?schema=public&connection_limit=10"
}

enum CompanyStatus {
  Enable
  Disable
}

enum DivisionStatus {
  Enable
  Disable
}

enum WorkGroupStatus {
  Enable
  Disable
}

enum ReportStatus {
  Enable
  Disable
}

model Company {
  id                Int           @id @default(autoincrement())
  name              String        @unique @db.VarChar(50)
  contactPersonName String        @db.VarChar(100)
  address           String?       @db.VarChar(100)
  contactNumber     String?       @db.VarChar(20)
  contactEmail      String?       @unique @db.VarChar(50)
  createdAt         DateTime      @default(now())
  lastUpdated       DateTime      @updatedAt
  createdBy         String        @db.VarChar(50)
  lastUpdatedBy     String?       @db.VarChar(50)
  status            CompanyStatus @default(Enable)

  Divisions Division[]
}

model Division {
  id                Int            @id @default(autoincrement())
  companyId         Int
  name              String         @unique @db.VarChar(50)
  contactPersonName String         @db.VarChar(100)
  address           String?        @db.VarChar(200)
  contactNumber     String?        @db.VarChar(20)
  contactEmail      String?        @unique @db.VarChar(50)
  company           Company?       @relation(fields: [companyId], references: [id])
  createdAt         DateTime       @default(now())
  lastUpdated       DateTime       @updatedAt
  createdBy         String         @db.VarChar(50)
  lastUpdatedBy     String?        @db.VarChar(50)
  status            DivisionStatus @default(Enable)
}

model WorkGroup {
  id            Int             @id @default(autoincrement())
  name          String          @unique @db.VarChar(150)
  createdAt     DateTime?        @default(now())
  lastUpdated   DateTime?        @updatedAt
  createdBy     String?         @db.VarChar(50)
  lastUpdatedBy String?         @db.VarChar(50)
  status        WorkGroupStatus? @default(Enable)
  Reports       Report[]
}

model Report {
  id            Int          @id @default(autoincrement())
  name          String       @unique @db.VarChar(150)
  description   String?      @db.VarChar(200)
  reportId      String       @unique @db.VarChar(50)
  workspaceId   String       @db.VarChar(50)
  createdAt     DateTime     @default(now())
  lastUpdated   DateTime     @updatedAt
  createdBy     String       @db.VarChar(50)
  lastUpdatedBy String?      @db.VarChar(50)
  status        ReportStatus @default(Enable)
  WorkGroup     WorkGroup    @relation(fields: [workGroupId], references: [id])
  workGroupId   Int
}
